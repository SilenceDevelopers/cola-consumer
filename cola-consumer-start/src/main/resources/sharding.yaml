dataSources:
  ds_0:
    driverClassName: com.mysql.cj.jdbc.Driver
    dataSourceClassName: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://192.168.78.201:3306/store?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: 123456
  ds_1:
    driverClassName: com.mysql.cj.jdbc.Driver
    dataSourceClassName: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://192.168.78.201:3307/store?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: 123456


rules:
  - !SHARDING
    tables:
      sharding_order:
        actualDataNodes: ds.sharding_order_${0..1}
        databaseStrategy: # 分库策略，缺省表示使用默认分库策略，以下的分片策略只能选其一
          none:
          # standard: # 用于单分片键的标准分片场景
          #   shardingColumn: sharding_key
          #   shardingAlgorithmName: database_inline
        tableStrategy:
          standard:
            shardingColumn: id
            shardingAlgorithmName: table_inline
    shardingAlgorithms:
#       database_inline: # 分库策略
#         type: CLASS_BASED
#         props:
#           strategy: STANDARD
#           algorithmClassName: com.base.strategy.StandardDbPreciseStandardShardingAlgorithm
      table_inline: # 分表策略
        type: INLINE
        props:
          # strategy: STANDARD
          algorithm-expression: sharding_order_$->{id % 2 + 1}
  - !READWRITE_SPLITTING
    dataSources:
      ds:
        writeDataSourceName: ds_0
        readDataSourceNames:
          - ds_1
        loadBalancerName: round-robin
    loadBalancers:
      round-robin:
        type: RANDOM

props:
  sql-show: true
